name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: newspass
          POSTGRES_USER: newsuser
          POSTGRES_DB: newsdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run ruff linting
      run: |
        ruff check .

    - name: Run black formatting check
      run: |
        black --check .

    - name: Run mypy type checking
      run: |
        mypy app/

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://newsuser:newspass@localhost:5432/newsdb" >> $GITHUB_ENV
        echo "DEBUG=false" >> $GITHUB_ENV
        echo "LOG_LEVEL=INFO" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        alembic upgrade head

    - name: Run tests
      run: |
        pytest

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t news-scraper:latest .
    
    - name: Test Docker Compose
      run: |
        docker-compose -f docker-compose.yml config
    
    - name: Run Docker Compose health check
      run: |
        docker-compose up -d
        sleep 30
        docker-compose ps
        curl -f http://localhost:8000/api/v1/health || exit 1
        docker-compose down